name: 'Checkout'
on: push
jobs:
  app-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout working branch
        uses: "actions/checkout@v2"
      - name: Run go test with coverage
        run: |
          go test -v -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.45

  build-deploy:
    runs-on: ubuntu-latest
    needs: [app-build]
    if: startsWith(github.ref, 'refs/tags')
    steps:
      # - name: Get Version
      #   id: version_step
      #   run: |
      #     echo "##[set-output name=version_tag;]$(echo ${GITHUB_REF##/})"
      # - name: print version
      #   run: |
      #     echo ${{steps.version_step.outputs.version_tag}}
      - name: Setup QEMU  
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v1
      - name: Login to DockerHub
        env:
          DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: pravarag/deploy-scm-task:latest

  deploy-k8s:
    name: Deploy to K8s cluster
    runs-on: ubuntu-latest
    needs: [build-deploy]
    steps:
    - name: checkout current branch
      uses: actions/checkout@v1
    # - name: Set release version
    #   run: |
    - name: Set cluster credentials
      run: |
        echo CLUSTER_NAME='gke-cluster-1' >> $GITHUB_ENV
        echo CLUSTER_ZONE='us-central1-c' >> $GITHUB_ENV
    - name: Install kubectl
      run: |
        sudo apt-get install -y apt-transport-https ca-certificates curl
        sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
        echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] \
        https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        sudo apt-get update
        sudo apt-get install -y kubectl
    - name: Deploy Release into cluster
      env:
        GCLOUD_KEY: ${{secrets.GCLOUD_KEY}}
      run: |
          echo "$GCLOUD_KEY" | base64 --decode > ${HOME}/gcloud.json
          ls -latr ${HOME}/
          gcloud auth activate-service-account --key-file=${HOME}/gcloud.json
          gcloud auth configure-docker
          gcloud container clusters get-credentials gke-cluster-1 \
          --zone us-central1-c --project turing-botany-343612

          # Run kubectl commands
          kubectl apply -f ./kubernetes/deployment.yaml
          kubectl apply -f ./kubernetes/service.yaml
          kubectl get pods | grep "go-web-app"

